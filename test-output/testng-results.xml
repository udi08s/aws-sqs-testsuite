<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="17" passed="17">
  <reporter-output>
  </reporter-output>
  <suite name="AWS SQS Test Suite" duration-ms="22432" started-at="2019-08-18T23:13:21Z" finished-at="2019-08-18T23:13:44Z">
    <groups>
    </groups>
    <test name="RegressionTest" duration-ms="22432" started-at="2019-08-18T23:13:21Z" finished-at="2019-08-18T23:13:44Z">
      <class name="com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages">
        <test-method status="PASS" signature="setupElasticMQ()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="setupElasticMQ" is-config="true" duration-ms="5" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupElasticMQ -->
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="setupMethod" is-config="true" duration-ms="44" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="testSendDifferentMessagesToTheQueue(java.lang.String)[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="testSendDifferentMessagesToTheQueue" duration-ms="35" started-at="2019-08-18T23:13:32Z" data-provider="getData" finished-at="2019-08-18T23:13:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*(!@@##(!(@*@*!*!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendDifferentMessagesToTheQueue -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="tearDownMethod" is-config="true" duration-ms="37" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="setupMethod" is-config="true" duration-ms="46" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="testSendDifferentMessagesToTheQueue(java.lang.String)[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="testSendDifferentMessagesToTheQueue" duration-ms="36" started-at="2019-08-18T23:13:32Z" data-provider="getData" finished-at="2019-08-18T23:13:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890122344444121212]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendDifferentMessagesToTheQueue -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="tearDownMethod" is-config="true" duration-ms="19" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="setupMethod" is-config="true" duration-ms="24" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="testSendDifferentMessagesToTheQueue(java.lang.String)[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="testSendDifferentMessagesToTheQueue" duration-ms="23" started-at="2019-08-18T23:13:32Z" data-provider="getData" finished-at="2019-08-18T23:13:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ababbabdbadbjadbajsdbjasdbasdbjasdjasbdasdbjabdjabdjasbdjabdjasdbjasbdjasbdjasbdjasdbjabsdjasdbasdbj]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendDifferentMessagesToTheQueue -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="tearDownMethod" is-config="true" duration-ms="19" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="setupMethod" is-config="true" duration-ms="24" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="testSendDifferentMessagesToTheQueue(java.lang.String)[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="testSendDifferentMessagesToTheQueue" duration-ms="22" started-at="2019-08-18T23:13:32Z" data-provider="getData" finished-at="2019-08-18T23:13:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendDifferentMessagesToTheQueue -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="tearDownMethod" is-config="true" duration-ms="16" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="setupMethod" is-config="true" duration-ms="24" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="testSendDifferentMessagesToTheQueue(java.lang.String)[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="testSendDifferentMessagesToTheQueue" duration-ms="22" started-at="2019-08-18T23:13:33Z" data-provider="getData" finished-at="2019-08-18T23:13:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HelloWorld]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendDifferentMessagesToTheQueue -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="tearDownMethod" is-config="true" duration-ms="19" started-at="2019-08-18T23:13:33Z" finished-at="2019-08-18T23:13:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="setupMethod" is-config="true" duration-ms="24" started-at="2019-08-18T23:13:33Z" finished-at="2019-08-18T23:13:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="testSendDifferentMessagesToTheQueue(java.lang.String)[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="testSendDifferentMessagesToTheQueue" duration-ms="21" started-at="2019-08-18T23:13:33Z" data-provider="getData" finished-at="2019-08-18T23:13:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[U+0904]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendDifferentMessagesToTheQueue -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages@71984c3]" name="tearDownMethod" is-config="true" duration-ms="21" started-at="2019-08-18T23:13:33Z" finished-at="2019-08-18T23:13:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
      </class> <!-- com.testingfoo.tests.standardQueue.SendAndRecieveDifferentMessages -->
      <class name="com.testingfoo.tests.standardQueue.SendInvalidLargeMessage">
        <test-method status="PASS" signature="setupElasticMQ()[pri:0, instance:com.testingfoo.tests.standardQueue.SendInvalidLargeMessage@165b2f7f]" name="setupElasticMQ" is-config="true" duration-ms="4" started-at="2019-08-18T23:13:33Z" finished-at="2019-08-18T23:13:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupElasticMQ -->
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendInvalidLargeMessage@165b2f7f]" name="setupMethod" is-config="true" duration-ms="29" started-at="2019-08-18T23:13:33Z" finished-at="2019-08-18T23:13:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="testSendInvalidMessageToTheQueue()[pri:0, instance:com.testingfoo.tests.standardQueue.SendInvalidLargeMessage@165b2f7f]" name="testSendInvalidMessageToTheQueue" duration-ms="328" started-at="2019-08-18T23:13:33Z" finished-at="2019-08-18T23:13:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendInvalidMessageToTheQueue -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendInvalidLargeMessage@165b2f7f]" name="tearDownMethod" is-config="true" duration-ms="23" started-at="2019-08-18T23:13:33Z" finished-at="2019-08-18T23:13:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
      </class> <!-- com.testingfoo.tests.standardQueue.SendInvalidLargeMessage -->
      <class name="com.testingfoo.tests.standardQueue.SendAndRecieveBasicMessage">
        <test-method status="PASS" signature="setupElasticMQ()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveBasicMessage@350ec41e]" name="setupElasticMQ" is-config="true" duration-ms="8" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupElasticMQ -->
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveBasicMessage@350ec41e]" name="setupMethod" is-config="true" duration-ms="86" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="testSendSimpleMessage()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveBasicMessage@350ec41e]" name="testSendSimpleMessage" duration-ms="40" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendSimpleMessage -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveBasicMessage@350ec41e]" name="tearDownMethod" is-config="true" duration-ms="41" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
      </class> <!-- com.testingfoo.tests.standardQueue.SendAndRecieveBasicMessage -->
      <class name="com.testingfoo.tests.standardQueue.SendInvalidNullMessage">
        <test-method status="PASS" signature="setupElasticMQ()[pri:0, instance:com.testingfoo.tests.standardQueue.SendInvalidNullMessage@6c8bca63]" name="setupElasticMQ" is-config="true" duration-ms="4" started-at="2019-08-18T23:13:43Z" finished-at="2019-08-18T23:13:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupElasticMQ -->
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendInvalidNullMessage@6c8bca63]" name="setupMethod" is-config="true" duration-ms="47" started-at="2019-08-18T23:13:43Z" finished-at="2019-08-18T23:13:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="testSendInvalidNullMessageToTheQueue()[pri:0, instance:com.testingfoo.tests.standardQueue.SendInvalidNullMessage@6c8bca63]" name="testSendInvalidNullMessageToTheQueue" duration-ms="589" started-at="2019-08-18T23:13:43Z" finished-at="2019-08-18T23:13:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendInvalidNullMessageToTheQueue -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendInvalidNullMessage@6c8bca63]" name="tearDownMethod" is-config="true" duration-ms="28" started-at="2019-08-18T23:13:44Z" finished-at="2019-08-18T23:13:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
      </class> <!-- com.testingfoo.tests.standardQueue.SendInvalidNullMessage -->
      <class name="com.testingfoo.tests.standardQueue.SendAndRecieveMessageWithDelay">
        <test-method status="PASS" signature="setupElasticMQ()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveMessageWithDelay@277f7dd3]" name="setupElasticMQ" is-config="true" duration-ms="4" started-at="2019-08-18T23:13:33Z" finished-at="2019-08-18T23:13:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupElasticMQ -->
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveMessageWithDelay@277f7dd3]" name="setupMethod" is-config="true" duration-ms="35" started-at="2019-08-18T23:13:33Z" finished-at="2019-08-18T23:13:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="testSendMessageWithDelay()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveMessageWithDelay@277f7dd3]" name="testSendMessageWithDelay" duration-ms="10029" started-at="2019-08-18T23:13:33Z" finished-at="2019-08-18T23:13:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendMessageWithDelay -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveMessageWithDelay@277f7dd3]" name="tearDownMethod" is-config="true" duration-ms="19" started-at="2019-08-18T23:13:43Z" finished-at="2019-08-18T23:13:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
      </class> <!-- com.testingfoo.tests.standardQueue.SendAndRecieveMessageWithDelay -->
      <class name="com.testingfoo.tests.standardQueue.CreateBlankNameQueueTest">
        <test-method status="PASS" signature="setupElasticMQ()[pri:0, instance:com.testingfoo.tests.standardQueue.CreateBlankNameQueueTest@665e9289]" name="setupElasticMQ" is-config="true" duration-ms="2140" started-at="2019-08-18T23:13:22Z" finished-at="2019-08-18T23:13:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupElasticMQ -->
        <test-method status="PASS" signature="testCreateQueueWithBlankQueueName()[pri:0, instance:com.testingfoo.tests.standardQueue.CreateBlankNameQueueTest@665e9289]" name="testCreateQueueWithBlankQueueName" duration-ms="1146" started-at="2019-08-18T23:13:24Z" finished-at="2019-08-18T23:13:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateQueueWithBlankQueueName -->
        <test-method status="FAIL" signature="tearDownMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.CreateBlankNameQueueTest@665e9289]" name="tearDownMethod" is-config="true" duration-ms="132" started-at="2019-08-18T23:13:25Z" finished-at="2019-08-18T23:13:25Z">
          <exception class="com.amazonaws.services.sqs.model.AmazonSQSException">
            <message>
              <![CDATA[InvalidAction; see the SQS docs. (Service: AmazonSQS; Status Code: 400; Error Code: InvalidAction; Request ID: 00000000-0000-0000-0000-000000000000)]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.amazonaws.services.sqs.model.AmazonSQSException: InvalidAction; see the SQS docs. (Service: AmazonSQS; Status Code: 400; Error Code: InvalidAction; Request ID: 00000000-0000-0000-0000-000000000000)
at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1712)
at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1367)
at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1113)
at com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:770)
at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:744)
at com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:726)
at com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:686)
at com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:668)
at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:532)
at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:512)
at com.amazonaws.services.sqs.AmazonSQSClient.doInvoke(AmazonSQSClient.java:2214)
at com.amazonaws.services.sqs.AmazonSQSClient.invoke(AmazonSQSClient.java:2181)
at com.amazonaws.services.sqs.AmazonSQSClient.invoke(AmazonSQSClient.java:2170)
at com.amazonaws.services.sqs.AmazonSQSClient.executeDeleteQueue(AmazonSQSClient.java:1057)
at com.amazonaws.services.sqs.AmazonSQSClient.deleteQueue(AmazonSQSClient.java:1029)
at com.testingfoo.elasticmq.SQSQueue.deleteQueue(SQSQueue.java:239)
at com.testingfoo.tests.standardQueue.CreateBlankNameQueueTest.tearDownMethod(CreateBlankNameQueueTest.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.amazonaws.services.sqs.model.AmazonSQSException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
      </class> <!-- com.testingfoo.tests.standardQueue.CreateBlankNameQueueTest -->
      <class name="com.testingfoo.tests.standardQueue.SendAndRecieveBatchMessages">
        <test-method status="PASS" signature="setupElasticMQ()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveBatchMessages@69637b10]" name="setupElasticMQ" is-config="true" duration-ms="6" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupElasticMQ -->
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveBatchMessages@69637b10]" name="setupMethod" is-config="true" duration-ms="84" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="testSendBatchMessagesToTheQueue()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveBatchMessages@69637b10]" name="testSendBatchMessagesToTheQueue" duration-ms="38" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendBatchMessagesToTheQueue -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveBatchMessages@69637b10]" name="tearDownMethod" is-config="true" duration-ms="21" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
      </class> <!-- com.testingfoo.tests.standardQueue.SendAndRecieveBatchMessages -->
      <class name="com.testingfoo.tests.standardQueue.CreateQueueWithInvalidQueueNames">
        <test-method status="PASS" signature="setupElasticMQ()[pri:0, instance:com.testingfoo.tests.standardQueue.CreateQueueWithInvalidQueueNames@2756c0a7]" name="setupElasticMQ" is-config="true" duration-ms="10" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupElasticMQ -->
        <test-method status="PASS" signature="testCreateQueueWithInvalidQueueNames(java.lang.String)[pri:0, instance:com.testingfoo.tests.standardQueue.CreateQueueWithInvalidQueueNames@2756c0a7]" name="testCreateQueueWithInvalidQueueNames" duration-ms="102" started-at="2019-08-18T23:13:32Z" data-provider="getData" finished-at="2019-08-18T23:13:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijkl]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateQueueWithInvalidQueueNames -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.CreateQueueWithInvalidQueueNames@2756c0a7]" name="tearDownMethod" is-config="true" duration-ms="26" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="PASS" signature="testCreateQueueWithInvalidQueueNames(java.lang.String)[pri:0, instance:com.testingfoo.tests.standardQueue.CreateQueueWithInvalidQueueNames@2756c0a7]" name="testCreateQueueWithInvalidQueueNames" duration-ms="30" started-at="2019-08-18T23:13:32Z" data-provider="getData" finished-at="2019-08-18T23:13:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[#]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateQueueWithInvalidQueueNames -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.CreateQueueWithInvalidQueueNames@2756c0a7]" name="tearDownMethod" is-config="true" duration-ms="38" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
      </class> <!-- com.testingfoo.tests.standardQueue.CreateQueueWithInvalidQueueNames -->
      <class name="com.testingfoo.tests.standardQueue.CreateQueueTest">
        <test-method status="PASS" signature="setupElasticMQ()[pri:0, instance:com.testingfoo.tests.standardQueue.CreateQueueTest@7d3430a7]" name="setupElasticMQ" is-config="true" duration-ms="10" started-at="2019-08-18T23:13:25Z" finished-at="2019-08-18T23:13:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupElasticMQ -->
        <test-method status="PASS" signature="testCreateQueue()[pri:0, instance:com.testingfoo.tests.standardQueue.CreateQueueTest@7d3430a7]" name="testCreateQueue" duration-ms="38" started-at="2019-08-18T23:13:25Z" finished-at="2019-08-18T23:13:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateQueue -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.CreateQueueTest@7d3430a7]" name="tearDownMethod" is-config="true" duration-ms="38" started-at="2019-08-18T23:13:25Z" finished-at="2019-08-18T23:13:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
      </class> <!-- com.testingfoo.tests.standardQueue.CreateQueueTest -->
      <class name="com.testingfoo.tests.standardQueue.SendAndRecieveJsonMessages">
        <test-method status="PASS" signature="setupElasticMQ()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveJsonMessages@5536379e]" name="setupElasticMQ" is-config="true" duration-ms="5" started-at="2019-08-18T23:13:33Z" finished-at="2019-08-18T23:13:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupElasticMQ -->
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveJsonMessages@5536379e]" name="setupMethod" is-config="true" duration-ms="42" started-at="2019-08-18T23:13:33Z" finished-at="2019-08-18T23:13:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="testSendJSONMessagesToTheQueue()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveJsonMessages@5536379e]" name="testSendJSONMessagesToTheQueue" duration-ms="33" started-at="2019-08-18T23:13:33Z" finished-at="2019-08-18T23:13:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendJSONMessagesToTheQueue -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.SendAndRecieveJsonMessages@5536379e]" name="tearDownMethod" is-config="true" duration-ms="26" started-at="2019-08-18T23:13:33Z" finished-at="2019-08-18T23:13:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
      </class> <!-- com.testingfoo.tests.standardQueue.SendAndRecieveJsonMessages -->
      <class name="com.testingfoo.tests.standardQueue.CreateQueueWithSpecifiedVisibilityTimeout">
        <test-method status="PASS" signature="setupElasticMQ()[pri:0, instance:com.testingfoo.tests.standardQueue.CreateQueueWithSpecifiedVisibilityTimeout@6f603e89]" name="setupElasticMQ" is-config="true" duration-ms="11" started-at="2019-08-18T23:13:25Z" finished-at="2019-08-18T23:13:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupElasticMQ -->
        <test-method status="PASS" signature="testCreateQueuewithVisibilityTimeOut()[pri:0, instance:com.testingfoo.tests.standardQueue.CreateQueueWithSpecifiedVisibilityTimeout@6f603e89]" name="testCreateQueuewithVisibilityTimeOut" duration-ms="6162" started-at="2019-08-18T23:13:25Z" finished-at="2019-08-18T23:13:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateQueuewithVisibilityTimeOut -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:com.testingfoo.tests.standardQueue.CreateQueueWithSpecifiedVisibilityTimeout@6f603e89]" name="tearDownMethod" is-config="true" duration-ms="42" started-at="2019-08-18T23:13:32Z" finished-at="2019-08-18T23:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
      </class> <!-- com.testingfoo.tests.standardQueue.CreateQueueWithSpecifiedVisibilityTimeout -->
    </test> <!-- RegressionTest -->
  </suite> <!-- AWS SQS Test Suite -->
</testng-results>
